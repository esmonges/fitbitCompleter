
var util = require("util");
var choreography = require("temboo/core/choreography");


/*
    CancelSubscription
    Cancels an existing subscription.
*/


var CancelSubscription = function(session) {
    /*
        Create a new instance of the CancelSubscription Choreo. A TembooSession object, containing a valid
        set of Temboo credentials, must be supplied.
	*/
    var location = "/Library/AuthorizeNet/AutomatedRecurringBilling/CancelSubscription"
    CancelSubscription.super_.call(this, session, location);

    /*
    Define a callback that will be used to appropriately format the results of this Choreo.
    */
    var newResultSet = function(resultStream) {
        return new CancelSubscriptionResultSet(resultStream);
    }

	/*
	Obtain a new InputSet object, used to specify the input values for an execution of this Choreo.
	*/
    this.newInputSet = function() {
        return new CancelSubscriptionInputSet();
    }
    
	/*
	Execute this Choreo with the specified inputs, calling the specified callback upon success,
	and the specified errorCallback upon error.
	*/
    this.execute = function(inputs, callback, errorCallback) {
        this._execute(inputs, newResultSet, callback, errorCallback);
    }
}


/*
An InputSet with methods appropriate for specifying the inputs to the CancelSubscription
Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
*/

var CancelSubscriptionInputSet = function() {
    CancelSubscriptionInputSet.super_.call(this);
        /*
        Set the value of the APILoginId input for this Choreo. ((required, string) The API Login Id provided by Authorize.net when signing up for a developer account.)
        */
        this.set_APILoginId = function(value) {
            this.setInput("APILoginId", value);
        }

        /*
        Set the value of the Endpoint input for this Choreo. ((optional, string) Set to api.authorize.net when running in production. Defaults to apitest.authorize.net for sandbox testing.)
        */
        this.set_Endpoint = function(value) {
            this.setInput("Endpoint", value);
        }

        /*
        Set the value of the RefId input for this Choreo. ((optional, string) The merchant assigned reference id for the subscription.)
        */
        this.set_RefId = function(value) {
            this.setInput("RefId", value);
        }

        /*
        Set the value of the SubscriptionId input for this Choreo. ((required, integer) The id of the subscription that you want to cancel.)
        */
        this.set_SubscriptionId = function(value) {
            this.setInput("SubscriptionId", value);
        }

        /*
        Set the value of the TransactionKey input for this Choreo. ((required, string) The TransactionKey provided by Authorize.net when signing up for a developer account.)
        */
        this.set_TransactionKey = function(value) {
            this.setInput("TransactionKey", value);
        }

}

/*
A ResultSet with methods tailored to the values returned by the CancelSubscription Choreo.
The ResultSet object is used to retrieve the results of a Choreo execution.
*/

var CancelSubscriptionResultSet = function(resultStream) {
    CancelSubscriptionResultSet.super_.call(this, resultStream);    
        /*
        Retrieve the value for the "Response" output from this Choreo execution. ((xml) The response from Authorize.net.)
        */
        this.get_Response = function() {
            return this.getResult("Response");
        }
}

util.inherits(CancelSubscription, choreography.Choreography);
util.inherits(CancelSubscriptionInputSet, choreography.InputSet);
util.inherits(CancelSubscriptionResultSet, choreography.ResultSet);
exports.CancelSubscription = CancelSubscription;


/*
    CreateSubscriptionWithBankAccount
    Creates a new subscription and sets up a recurring payment for the subscription using a bank account payment.
*/


var CreateSubscriptionWithBankAccount = function(session) {
    /*
        Create a new instance of the CreateSubscriptionWithBankAccount Choreo. A TembooSession object, containing a valid
        set of Temboo credentials, must be supplied.
	*/
    var location = "/Library/AuthorizeNet/AutomatedRecurringBilling/CreateSubscriptionWithBankAccount"
    CreateSubscriptionWithBankAccount.super_.call(this, session, location);

    /*
    Define a callback that will be used to appropriately format the results of this Choreo.
    */
    var newResultSet = function(resultStream) {
        return new CreateSubscriptionWithBankAccountResultSet(resultStream);
    }

	/*
	Obtain a new InputSet object, used to specify the input values for an execution of this Choreo.
	*/
    this.newInputSet = function() {
        return new CreateSubscriptionWithBankAccountInputSet();
    }
    
	/*
	Execute this Choreo with the specified inputs, calling the specified callback upon success,
	and the specified errorCallback upon error.
	*/
    this.execute = function(inputs, callback, errorCallback) {
        this._execute(inputs, newResultSet, callback, errorCallback);
    }
}


/*
An InputSet with methods appropriate for specifying the inputs to the CreateSubscriptionWithBankAccount
Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
*/

var CreateSubscriptionWithBankAccountInputSet = function() {
    CreateSubscriptionWithBankAccountInputSet.super_.call(this);
        /*
        Set the value of the APILoginId input for this Choreo. ((required, string) The API Login Id provided by Authorize.net when signing up for a developer account.)
        */
        this.set_APILoginId = function(value) {
            this.setInput("APILoginId", value);
        }

        /*
        Set the value of the AccountNumber input for this Choreo. ((required, integer) The account number associated with the bank account payment.)
        */
        this.set_AccountNumber = function(value) {
            this.setInput("AccountNumber", value);
        }

        /*
        Set the value of the AccountType input for this Choreo. ((required, string) The account type to use for the bank account payment. Accepted values are: checking, businessChecking, and savings.)
        */
        this.set_AccountType = function(value) {
            this.setInput("AccountType", value);
        }

        /*
        Set the value of the Amount input for this Choreo. ((required, decimal) The amount to bill the customer for each recurring payment.)
        */
        this.set_Amount = function(value) {
            this.setInput("Amount", value);
        }

        /*
        Set the value of the BankName input for this Choreo. ((optional, string) The bank name associated with the bank account number.)
        */
        this.set_BankName = function(value) {
            this.setInput("BankName", value);
        }

        /*
        Set the value of the BillingAddress input for this Choreo. ((optional, string) The street address associated with the billing address.)
        */
        this.set_BillingAddress = function(value) {
            this.setInput("BillingAddress", value);
        }

        /*
        Set the value of the BillingCity input for this Choreo. ((optional, string) The city associated with the billing address.)
        */
        this.set_BillingCity = function(value) {
            this.setInput("BillingCity", value);
        }

        /*
        Set the value of the BillingCompany input for this Choreo. ((optional, string) The company associated with the billing address.)
        */
        this.set_BillingCompany = function(value) {
            this.setInput("BillingCompany", value);
        }

        /*
        Set the value of the BillingCountry input for this Choreo. ((optional, string) The country associated with the billing address.)
        */
        this.set_BillingCountry = function(value) {
            this.setInput("BillingCountry", value);
        }

        /*
        Set the value of the BillingFirstName input for this Choreo. ((required, string) The first name associated with the billing address.)
        */
        this.set_BillingFirstName = function(value) {
            this.setInput("BillingFirstName", value);
        }

        /*
        Set the value of the BillingLastName input for this Choreo. ((required, string) The last name associated with the billing address.)
        */
        this.set_BillingLastName = function(value) {
            this.setInput("BillingLastName", value);
        }

        /*
        Set the value of the BillingState input for this Choreo. ((optional, string) The state associated with the billing address.)
        */
        this.set_BillingState = function(value) {
            this.setInput("BillingState", value);
        }

        /*
        Set the value of the BillingZipCode input for this Choreo. ((optional, string) The zip code associated with the billing address.)
        */
        this.set_BillingZipCode = function(value) {
            this.setInput("BillingZipCode", value);
        }

        /*
        Set the value of the Description input for this Choreo. ((optional, string) The description of the subscription. 255 max characters.)
        */
        this.set_Description = function(value) {
            this.setInput("Description", value);
        }

        /*
        Set the value of the ECheckType input for this Choreo. ((required, string) The type of electronic check transaction used for the subscription. Acceptable values are: PPD or WEB.)
        */
        this.set_ECheckType = function(value) {
            this.setInput("ECheckType", value);
        }

        /*
        Set the value of the Email input for this Choreo. ((optional, string) The email address of the customer.)
        */
        this.set_Email = function(value) {
            this.setInput("Email", value);
        }

        /*
        Set the value of the Endpoint input for this Choreo. ((optional, string) Set to api.authorize.net when running in production. Defaults to apitest.authorize.net for sandbox testing.)
        */
        this.set_Endpoint = function(value) {
            this.setInput("Endpoint", value);
        }

        /*
        Set the value of the FaxNumber input for this Choreo. ((optional, string) The fax number of the customer.)
        */
        this.set_FaxNumber = function(value) {
            this.setInput("FaxNumber", value);
        }

        /*
        Set the value of the Id input for this Choreo. ((optional, string) The merchant assigned customer id.)
        */
        this.set_Id = function(value) {
            this.setInput("Id", value);
        }

        /*
        Set the value of the InvoiceNumber input for this Choreo. ((optional, string) The merchant assigned invoice number for the subscription.)
        */
        this.set_InvoiceNumber = function(value) {
            this.setInput("InvoiceNumber", value);
        }

        /*
        Set the value of the Length input for this Choreo. ((optional, integer) Measurement of time for the frequency of billing. Associated with 'Unit'. Defaults to 1. Use 1-12 for unit months or 7-365 for unit days.)
        */
        this.set_Length = function(value) {
            this.setInput("Length", value);
        }

        /*
        Set the value of the NameOnAccount input for this Choreo. ((required, string) The name on the bank account.)
        */
        this.set_NameOnAccount = function(value) {
            this.setInput("NameOnAccount", value);
        }

        /*
        Set the value of the PhoneNumber input for this Choreo. ((optional, string) The phone number of the customer.)
        */
        this.set_PhoneNumber = function(value) {
            this.setInput("PhoneNumber", value);
        }

        /*
        Set the value of the RefId input for this Choreo. ((optional, string) The merchant-assigned reference ID for the request. If specified, it will be returned in the response from authorize.net.)
        */
        this.set_RefId = function(value) {
            this.setInput("RefId", value);
        }

        /*
        Set the value of the RoutingNumber input for this Choreo. ((required, integer) The routing number associated with the bank account payment.)
        */
        this.set_RoutingNumber = function(value) {
            this.setInput("RoutingNumber", value);
        }

        /*
        Set the value of the ShippingAddress input for this Choreo. ((optional, string) The street address associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingAddress = function(value) {
            this.setInput("ShippingAddress", value);
        }

        /*
        Set the value of the ShippingCity input for this Choreo. ((optional, string) The city associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCity = function(value) {
            this.setInput("ShippingCity", value);
        }

        /*
        Set the value of the ShippingCompany input for this Choreo. ((optional, string) The company associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCompany = function(value) {
            this.setInput("ShippingCompany", value);
        }

        /*
        Set the value of the ShippingCountry input for this Choreo. ((optional, string) The country associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCountry = function(value) {
            this.setInput("ShippingCountry", value);
        }

        /*
        Set the value of the ShippingFirstName input for this Choreo. ((optional, string) The first name associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingFirstName = function(value) {
            this.setInput("ShippingFirstName", value);
        }

        /*
        Set the value of the ShippingLastName input for this Choreo. ((optional, string) The last name associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingLastName = function(value) {
            this.setInput("ShippingLastName", value);
        }

        /*
        Set the value of the ShippingState input for this Choreo. ((optional, string) The state associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingState = function(value) {
            this.setInput("ShippingState", value);
        }

        /*
        Set the value of the ShippingZipCode input for this Choreo. ((optional, string) The zip code associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingZipCode = function(value) {
            this.setInput("ShippingZipCode", value);
        }

        /*
        Set the value of the StartDate input for this Choreo. ((required, date) The date that the subscription and billing begin. Formatted like YYYY-MM-DD.)
        */
        this.set_StartDate = function(value) {
            this.setInput("StartDate", value);
        }

        /*
        Set the value of the SubscriptionName input for this Choreo. ((optional, string) The merchant assigned name for the subscription. 50 max characters.)
        */
        this.set_SubscriptionName = function(value) {
            this.setInput("SubscriptionName", value);
        }

        /*
        Set the value of the TotalOccurrences input for this Choreo. ((optional, integer) Number of billing occurrences or payments for the subscription. Defaults to 9999 which means the subscription will be ongoing.)
        */
        this.set_TotalOccurrences = function(value) {
            this.setInput("TotalOccurrences", value);
        }

        /*
        Set the value of the TransactionKey input for this Choreo. ((required, string) The TransactionKey provided by Authorize.net when signing up for a developer account.)
        */
        this.set_TransactionKey = function(value) {
            this.setInput("TransactionKey", value);
        }

        /*
        Set the value of the TrialAmount input for this Choreo. ((conditional, decimal) The amount to be charged for a payment during a trial period. Required when TrialOccurances is specified. Defaults to 0.00.)
        */
        this.set_TrialAmount = function(value) {
            this.setInput("TrialAmount", value);
        }

        /*
        Set the value of the TrialOccurrences input for this Choreo. ((optional, integer) Number of billing occurrences or payments in the trial period. Defaults to 0.)
        */
        this.set_TrialOccurrences = function(value) {
            this.setInput("TrialOccurrences", value);
        }

        /*
        Set the value of the Unit input for this Choreo. ((optional, string) Unit of time between billing cycles. Used in association with interval 'Length'. Values can be 'months' or 'days'. Defaults to 'months'.)
        */
        this.set_Unit = function(value) {
            this.setInput("Unit", value);
        }

}

/*
A ResultSet with methods tailored to the values returned by the CreateSubscriptionWithBankAccount Choreo.
The ResultSet object is used to retrieve the results of a Choreo execution.
*/

var CreateSubscriptionWithBankAccountResultSet = function(resultStream) {
    CreateSubscriptionWithBankAccountResultSet.super_.call(this, resultStream);    
        /*
        Retrieve the value for the "Response" output from this Choreo execution. ((xml) The response from Authorize.net.)
        */
        this.get_Response = function() {
            return this.getResult("Response");
        }
}

util.inherits(CreateSubscriptionWithBankAccount, choreography.Choreography);
util.inherits(CreateSubscriptionWithBankAccountInputSet, choreography.InputSet);
util.inherits(CreateSubscriptionWithBankAccountResultSet, choreography.ResultSet);
exports.CreateSubscriptionWithBankAccount = CreateSubscriptionWithBankAccount;


/*
    CreateSubscriptionWithCreditCard
    Creates a new subscription and sets up a recurring payment for the subscription using a credit card payment method.
*/


var CreateSubscriptionWithCreditCard = function(session) {
    /*
        Create a new instance of the CreateSubscriptionWithCreditCard Choreo. A TembooSession object, containing a valid
        set of Temboo credentials, must be supplied.
	*/
    var location = "/Library/AuthorizeNet/AutomatedRecurringBilling/CreateSubscriptionWithCreditCard"
    CreateSubscriptionWithCreditCard.super_.call(this, session, location);

    /*
    Define a callback that will be used to appropriately format the results of this Choreo.
    */
    var newResultSet = function(resultStream) {
        return new CreateSubscriptionWithCreditCardResultSet(resultStream);
    }

	/*
	Obtain a new InputSet object, used to specify the input values for an execution of this Choreo.
	*/
    this.newInputSet = function() {
        return new CreateSubscriptionWithCreditCardInputSet();
    }
    
	/*
	Execute this Choreo with the specified inputs, calling the specified callback upon success,
	and the specified errorCallback upon error.
	*/
    this.execute = function(inputs, callback, errorCallback) {
        this._execute(inputs, newResultSet, callback, errorCallback);
    }
}


/*
An InputSet with methods appropriate for specifying the inputs to the CreateSubscriptionWithCreditCard
Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
*/

var CreateSubscriptionWithCreditCardInputSet = function() {
    CreateSubscriptionWithCreditCardInputSet.super_.call(this);
        /*
        Set the value of the APILoginId input for this Choreo. ((required, string) The API Login Id provided by Authorize.net when signing up for a developer account.)
        */
        this.set_APILoginId = function(value) {
            this.setInput("APILoginId", value);
        }

        /*
        Set the value of the Amount input for this Choreo. ((required, decimal) The amount to bill the customer for each recurring payment.)
        */
        this.set_Amount = function(value) {
            this.setInput("Amount", value);
        }

        /*
        Set the value of the BillingAddress input for this Choreo. ((optional, string) The street address associated with the billing address.)
        */
        this.set_BillingAddress = function(value) {
            this.setInput("BillingAddress", value);
        }

        /*
        Set the value of the BillingCity input for this Choreo. ((optional, string) The city associated with the billing address.)
        */
        this.set_BillingCity = function(value) {
            this.setInput("BillingCity", value);
        }

        /*
        Set the value of the BillingCompany input for this Choreo. ((optional, string) The company associated with the billing address.)
        */
        this.set_BillingCompany = function(value) {
            this.setInput("BillingCompany", value);
        }

        /*
        Set the value of the BillingCountry input for this Choreo. ((optional, string) The country associated with the billing address.)
        */
        this.set_BillingCountry = function(value) {
            this.setInput("BillingCountry", value);
        }

        /*
        Set the value of the BillingFirstName input for this Choreo. ((required, string) The first name associated with the billing address.)
        */
        this.set_BillingFirstName = function(value) {
            this.setInput("BillingFirstName", value);
        }

        /*
        Set the value of the BillingLastName input for this Choreo. ((required, string) The last name associated with the billing address.)
        */
        this.set_BillingLastName = function(value) {
            this.setInput("BillingLastName", value);
        }

        /*
        Set the value of the BillingState input for this Choreo. ((optional, string) The state associated with the billing address.)
        */
        this.set_BillingState = function(value) {
            this.setInput("BillingState", value);
        }

        /*
        Set the value of the BillingZipCode input for this Choreo. ((optional, string) The zip code associated with the billing address.)
        */
        this.set_BillingZipCode = function(value) {
            this.setInput("BillingZipCode", value);
        }

        /*
        Set the value of the CardCode input for this Choreo. ((optional, integer) The 3 digit security code of the credit card.)
        */
        this.set_CardCode = function(value) {
            this.setInput("CardCode", value);
        }

        /*
        Set the value of the CardNumber input for this Choreo. ((required, integer) The credit card number for the recurring payment.)
        */
        this.set_CardNumber = function(value) {
            this.setInput("CardNumber", value);
        }

        /*
        Set the value of the Description input for this Choreo. ((optional, string) The description of the subscription. 255 max characters.)
        */
        this.set_Description = function(value) {
            this.setInput("Description", value);
        }

        /*
        Set the value of the Email input for this Choreo. ((optional, string) The email address of the customer.)
        */
        this.set_Email = function(value) {
            this.setInput("Email", value);
        }

        /*
        Set the value of the Endpoint input for this Choreo. ((optional, string) Set to api.authorize.net when running in production. Defaults to apitest.authorize.net for sandbox testing.)
        */
        this.set_Endpoint = function(value) {
            this.setInput("Endpoint", value);
        }

        /*
        Set the value of the ExpirationDate input for this Choreo. ((required, date) The 4 digit expiration date of the credit card. Formatted like MM/YY.)
        */
        this.set_ExpirationDate = function(value) {
            this.setInput("ExpirationDate", value);
        }

        /*
        Set the value of the FaxNumber input for this Choreo. ((optional, string) The fax number of the customer.)
        */
        this.set_FaxNumber = function(value) {
            this.setInput("FaxNumber", value);
        }

        /*
        Set the value of the Id input for this Choreo. ((optional, string) The merchant assigned customer id.)
        */
        this.set_Id = function(value) {
            this.setInput("Id", value);
        }

        /*
        Set the value of the InvoiceNumber input for this Choreo. ((optional, string) The merchant assigned invoice number for the subscription.)
        */
        this.set_InvoiceNumber = function(value) {
            this.setInput("InvoiceNumber", value);
        }

        /*
        Set the value of the Length input for this Choreo. ((optional, integer) Measurement of time for the frequency of billing. Associated with 'Unit'. Defaults to 1. Use 1-12 for unit months or 7-365 for unit days.)
        */
        this.set_Length = function(value) {
            this.setInput("Length", value);
        }

        /*
        Set the value of the PhoneNumber input for this Choreo. ((optional, string) The phone number of the customer.)
        */
        this.set_PhoneNumber = function(value) {
            this.setInput("PhoneNumber", value);
        }

        /*
        Set the value of the RefId input for this Choreo. ((optional, string) The merchant-assigned reference ID for the request. If specified, it will be returned in the response from authorize.net.)
        */
        this.set_RefId = function(value) {
            this.setInput("RefId", value);
        }

        /*
        Set the value of the ShippingAddress input for this Choreo. ((optional, string) The street address associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingAddress = function(value) {
            this.setInput("ShippingAddress", value);
        }

        /*
        Set the value of the ShippingCity input for this Choreo. ((optional, string) The city associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCity = function(value) {
            this.setInput("ShippingCity", value);
        }

        /*
        Set the value of the ShippingCompany input for this Choreo. ((optional, string) The company associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCompany = function(value) {
            this.setInput("ShippingCompany", value);
        }

        /*
        Set the value of the ShippingCountry input for this Choreo. ((optional, string) The country associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCountry = function(value) {
            this.setInput("ShippingCountry", value);
        }

        /*
        Set the value of the ShippingFirstName input for this Choreo. ((optional, string) The first name associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingFirstName = function(value) {
            this.setInput("ShippingFirstName", value);
        }

        /*
        Set the value of the ShippingLastName input for this Choreo. ((optional, string) The last name associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingLastName = function(value) {
            this.setInput("ShippingLastName", value);
        }

        /*
        Set the value of the ShippingState input for this Choreo. ((optional, string) The state associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingState = function(value) {
            this.setInput("ShippingState", value);
        }

        /*
        Set the value of the ShippingZipCode input for this Choreo. ((optional, string) The zip code associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingZipCode = function(value) {
            this.setInput("ShippingZipCode", value);
        }

        /*
        Set the value of the StartDate input for this Choreo. ((required, date) The date that the subscription and billing begin. Formatted like YYYY-MM-DD.)
        */
        this.set_StartDate = function(value) {
            this.setInput("StartDate", value);
        }

        /*
        Set the value of the SubscriptionName input for this Choreo. ((optional, string) The merchant assigned name for the subscription. 50 max characters.)
        */
        this.set_SubscriptionName = function(value) {
            this.setInput("SubscriptionName", value);
        }

        /*
        Set the value of the TotalOccurrences input for this Choreo. ((optional, integer) Number of billing occurrences or payments for the subscription. Defaults to 9999 which means the subscription will be ongoing.)
        */
        this.set_TotalOccurrences = function(value) {
            this.setInput("TotalOccurrences", value);
        }

        /*
        Set the value of the TransactionKey input for this Choreo. ((required, string) The TransactionKey provided by Authorize.net when signing up for a developer account.)
        */
        this.set_TransactionKey = function(value) {
            this.setInput("TransactionKey", value);
        }

        /*
        Set the value of the TrialAmount input for this Choreo. ((conditional, decimal) The amount to be charged for a payment during a trial period. Required when TrialOccurances is specified. Defaults to 0.00.)
        */
        this.set_TrialAmount = function(value) {
            this.setInput("TrialAmount", value);
        }

        /*
        Set the value of the TrialOccurrences input for this Choreo. ((optional, integer) Number of billing occurrences or payments in the trial period. Defaults to 0.)
        */
        this.set_TrialOccurrences = function(value) {
            this.setInput("TrialOccurrences", value);
        }

        /*
        Set the value of the Unit input for this Choreo. ((optional, string) Unit of time between billing cycles. Used in association with interval 'Length'. Values can be 'months' or 'days'. Defaults to 'months'.)
        */
        this.set_Unit = function(value) {
            this.setInput("Unit", value);
        }

}

/*
A ResultSet with methods tailored to the values returned by the CreateSubscriptionWithCreditCard Choreo.
The ResultSet object is used to retrieve the results of a Choreo execution.
*/

var CreateSubscriptionWithCreditCardResultSet = function(resultStream) {
    CreateSubscriptionWithCreditCardResultSet.super_.call(this, resultStream);    
        /*
        Retrieve the value for the "Response" output from this Choreo execution. ((xml) The response from Authorize.net.)
        */
        this.get_Response = function() {
            return this.getResult("Response");
        }
}

util.inherits(CreateSubscriptionWithCreditCard, choreography.Choreography);
util.inherits(CreateSubscriptionWithCreditCardInputSet, choreography.InputSet);
util.inherits(CreateSubscriptionWithCreditCardResultSet, choreography.ResultSet);
exports.CreateSubscriptionWithCreditCard = CreateSubscriptionWithCreditCard;


/*
    GetSubscriptionStatus
    Returns status information for a specified subscription.
*/


var GetSubscriptionStatus = function(session) {
    /*
        Create a new instance of the GetSubscriptionStatus Choreo. A TembooSession object, containing a valid
        set of Temboo credentials, must be supplied.
	*/
    var location = "/Library/AuthorizeNet/AutomatedRecurringBilling/GetSubscriptionStatus"
    GetSubscriptionStatus.super_.call(this, session, location);

    /*
    Define a callback that will be used to appropriately format the results of this Choreo.
    */
    var newResultSet = function(resultStream) {
        return new GetSubscriptionStatusResultSet(resultStream);
    }

	/*
	Obtain a new InputSet object, used to specify the input values for an execution of this Choreo.
	*/
    this.newInputSet = function() {
        return new GetSubscriptionStatusInputSet();
    }
    
	/*
	Execute this Choreo with the specified inputs, calling the specified callback upon success,
	and the specified errorCallback upon error.
	*/
    this.execute = function(inputs, callback, errorCallback) {
        this._execute(inputs, newResultSet, callback, errorCallback);
    }
}


/*
An InputSet with methods appropriate for specifying the inputs to the GetSubscriptionStatus
Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
*/

var GetSubscriptionStatusInputSet = function() {
    GetSubscriptionStatusInputSet.super_.call(this);
        /*
        Set the value of the APILoginId input for this Choreo. ((required, string) The API Login Id provided by Authorize.net when signing up for a developer account.)
        */
        this.set_APILoginId = function(value) {
            this.setInput("APILoginId", value);
        }

        /*
        Set the value of the Endpoint input for this Choreo. ((optional, string) Set to api.authorize.net when running in production. Defaults to apitest.authorize.net for sandbox testing.)
        */
        this.set_Endpoint = function(value) {
            this.setInput("Endpoint", value);
        }

        /*
        Set the value of the RefId input for this Choreo. ((optional, string) The merchant assigned reference id for the subscription.)
        */
        this.set_RefId = function(value) {
            this.setInput("RefId", value);
        }

        /*
        Set the value of the SubscriptionId input for this Choreo. ((required, integer) The id of the subscription that you want to retrieve the status for.)
        */
        this.set_SubscriptionId = function(value) {
            this.setInput("SubscriptionId", value);
        }

        /*
        Set the value of the TransactionKey input for this Choreo. ((required, string) The TransactionKey provided by Authorize.net when signing up for a developer account.)
        */
        this.set_TransactionKey = function(value) {
            this.setInput("TransactionKey", value);
        }

}

/*
A ResultSet with methods tailored to the values returned by the GetSubscriptionStatus Choreo.
The ResultSet object is used to retrieve the results of a Choreo execution.
*/

var GetSubscriptionStatusResultSet = function(resultStream) {
    GetSubscriptionStatusResultSet.super_.call(this, resultStream);    
        /*
        Retrieve the value for the "Response" output from this Choreo execution. ((xml) The response from Authorize.net.)
        */
        this.get_Response = function() {
            return this.getResult("Response");
        }
}

util.inherits(GetSubscriptionStatus, choreography.Choreography);
util.inherits(GetSubscriptionStatusInputSet, choreography.InputSet);
util.inherits(GetSubscriptionStatusResultSet, choreography.ResultSet);
exports.GetSubscriptionStatus = GetSubscriptionStatus;


/*
    UpdateSubscription
    Updates an existing subscription.
*/


var UpdateSubscription = function(session) {
    /*
        Create a new instance of the UpdateSubscription Choreo. A TembooSession object, containing a valid
        set of Temboo credentials, must be supplied.
	*/
    var location = "/Library/AuthorizeNet/AutomatedRecurringBilling/UpdateSubscription"
    UpdateSubscription.super_.call(this, session, location);

    /*
    Define a callback that will be used to appropriately format the results of this Choreo.
    */
    var newResultSet = function(resultStream) {
        return new UpdateSubscriptionResultSet(resultStream);
    }

	/*
	Obtain a new InputSet object, used to specify the input values for an execution of this Choreo.
	*/
    this.newInputSet = function() {
        return new UpdateSubscriptionInputSet();
    }
    
	/*
	Execute this Choreo with the specified inputs, calling the specified callback upon success,
	and the specified errorCallback upon error.
	*/
    this.execute = function(inputs, callback, errorCallback) {
        this._execute(inputs, newResultSet, callback, errorCallback);
    }
}


/*
An InputSet with methods appropriate for specifying the inputs to the UpdateSubscription
Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
*/

var UpdateSubscriptionInputSet = function() {
    UpdateSubscriptionInputSet.super_.call(this);
        /*
        Set the value of the RequestXML input for this Choreo. ((optional, xml) Use this input to bybass single element inputs and submit your own XML for the request. See documentation for information on the correct schema.)
        */
        this.set_RequestXML = function(value) {
            this.setInput("RequestXML", value);
        }

        /*
        Set the value of the APILoginId input for this Choreo. ((required, string) The API Login Id provided by Authorize.net when signing up for a developer account.)
        */
        this.set_APILoginId = function(value) {
            this.setInput("APILoginId", value);
        }

        /*
        Set the value of the AccountNumber input for this Choreo. ((optional, integer) The account number when a banking account payment is specified.)
        */
        this.set_AccountNumber = function(value) {
            this.setInput("AccountNumber", value);
        }

        /*
        Set the value of the AccountType input for this Choreo. ((optional, string) The account type to use when a banking account payment is specified. Accepted values are: checking, businessChecking, and savings.)
        */
        this.set_AccountType = function(value) {
            this.setInput("AccountType", value);
        }

        /*
        Set the value of the Amount input for this Choreo. ((optional, decimal) The amount to bill the customer for each recurring payment.)
        */
        this.set_Amount = function(value) {
            this.setInput("Amount", value);
        }

        /*
        Set the value of the BankName input for this Choreo. ((optional, string) The bank name associated with the bank account number specified for a bank account payment.)
        */
        this.set_BankName = function(value) {
            this.setInput("BankName", value);
        }

        /*
        Set the value of the BillingAddress input for this Choreo. ((optional, string) The street address associated with the billing address.)
        */
        this.set_BillingAddress = function(value) {
            this.setInput("BillingAddress", value);
        }

        /*
        Set the value of the BillingCity input for this Choreo. ((optional, string) The city associated with the billing address.)
        */
        this.set_BillingCity = function(value) {
            this.setInput("BillingCity", value);
        }

        /*
        Set the value of the BillingCompany input for this Choreo. ((optional, string) The company associated with the billing address.)
        */
        this.set_BillingCompany = function(value) {
            this.setInput("BillingCompany", value);
        }

        /*
        Set the value of the BillingCountry input for this Choreo. ((optional, string) The country associated with the billing address.)
        */
        this.set_BillingCountry = function(value) {
            this.setInput("BillingCountry", value);
        }

        /*
        Set the value of the BillingFirstName input for this Choreo. ((optional, string) The first name associated with the billing address.)
        */
        this.set_BillingFirstName = function(value) {
            this.setInput("BillingFirstName", value);
        }

        /*
        Set the value of the BillingLastName input for this Choreo. ((optional, string) The last name associated with the billing address.)
        */
        this.set_BillingLastName = function(value) {
            this.setInput("BillingLastName", value);
        }

        /*
        Set the value of the BillingState input for this Choreo. ((optional, string) The state associated with the billing address.)
        */
        this.set_BillingState = function(value) {
            this.setInput("BillingState", value);
        }

        /*
        Set the value of the BillingZipCode input for this Choreo. ((optional, string) The zip code associated with the billing address.)
        */
        this.set_BillingZipCode = function(value) {
            this.setInput("BillingZipCode", value);
        }

        /*
        Set the value of the CardCode input for this Choreo. ((optional, integer) The 3 digit security code of the credit card.)
        */
        this.set_CardCode = function(value) {
            this.setInput("CardCode", value);
        }

        /*
        Set the value of the CardNumber input for this Choreo. ((optional, integer) The credit card number for the recurring payment.)
        */
        this.set_CardNumber = function(value) {
            this.setInput("CardNumber", value);
        }

        /*
        Set the value of the Description input for this Choreo. ((optional, string) The description of the subscription. 255 max characters.)
        */
        this.set_Description = function(value) {
            this.setInput("Description", value);
        }

        /*
        Set the value of the ECheckType input for this Choreo. ((optional, string) The type of electronic check transaction used for the subscription. Acceptable values are: PPD or WEB.)
        */
        this.set_ECheckType = function(value) {
            this.setInput("ECheckType", value);
        }

        /*
        Set the value of the Email input for this Choreo. ((optional, string) The email address of the customer.)
        */
        this.set_Email = function(value) {
            this.setInput("Email", value);
        }

        /*
        Set the value of the Endpoint input for this Choreo. ((optional, string) Set to api.authorize.net when running in production. Defaults to apitest.authorize.net for sandbox testing.)
        */
        this.set_Endpoint = function(value) {
            this.setInput("Endpoint", value);
        }

        /*
        Set the value of the ExpirationDate input for this Choreo. ((optional, date) The 4 digit expiration date of the credit card. Formatted like MM/YY.)
        */
        this.set_ExpirationDate = function(value) {
            this.setInput("ExpirationDate", value);
        }

        /*
        Set the value of the FaxNumber input for this Choreo. ((optional, string) The fax number of the customer.)
        */
        this.set_FaxNumber = function(value) {
            this.setInput("FaxNumber", value);
        }

        /*
        Set the value of the Id input for this Choreo. ((optional, string) The merchant assigned customer id.)
        */
        this.set_Id = function(value) {
            this.setInput("Id", value);
        }

        /*
        Set the value of the InvoiceNumber input for this Choreo. ((optional, string) The merchant assigned invoice number for the subscription.)
        */
        this.set_InvoiceNumber = function(value) {
            this.setInput("InvoiceNumber", value);
        }

        /*
        Set the value of the NameOnAccount input for this Choreo. ((optional, string) The name on the bank account.)
        */
        this.set_NameOnAccount = function(value) {
            this.setInput("NameOnAccount", value);
        }

        /*
        Set the value of the PhoneNumber input for this Choreo. ((optional, string) The phone number of the customer.)
        */
        this.set_PhoneNumber = function(value) {
            this.setInput("PhoneNumber", value);
        }

        /*
        Set the value of the RefId input for this Choreo. ((optional, string) The merchant-assigned reference ID for the request. If specified, it will be returned in the response from authorize.net.)
        */
        this.set_RefId = function(value) {
            this.setInput("RefId", value);
        }

        /*
        Set the value of the RoutingNumber input for this Choreo. ((optional, integer) The routing number associated with the bank account payment.)
        */
        this.set_RoutingNumber = function(value) {
            this.setInput("RoutingNumber", value);
        }

        /*
        Set the value of the ShippingAddress input for this Choreo. ((optional, string) The street address associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingAddress = function(value) {
            this.setInput("ShippingAddress", value);
        }

        /*
        Set the value of the ShippingCity input for this Choreo. ((optional, string) The city associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCity = function(value) {
            this.setInput("ShippingCity", value);
        }

        /*
        Set the value of the ShippingCompany input for this Choreo. ((optional, string) The company associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCompany = function(value) {
            this.setInput("ShippingCompany", value);
        }

        /*
        Set the value of the ShippingCountry input for this Choreo. ((optional, string) The country associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingCountry = function(value) {
            this.setInput("ShippingCountry", value);
        }

        /*
        Set the value of the ShippingFirstName input for this Choreo. ((optional, string) The first name associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingFirstName = function(value) {
            this.setInput("ShippingFirstName", value);
        }

        /*
        Set the value of the ShippingLastName input for this Choreo. ((optional, string) The last name associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingLastName = function(value) {
            this.setInput("ShippingLastName", value);
        }

        /*
        Set the value of the ShippingState input for this Choreo. ((optional, string) The state associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingState = function(value) {
            this.setInput("ShippingState", value);
        }

        /*
        Set the value of the ShippingZipCode input for this Choreo. ((optional, string) The zip code associated with the shipping address. Used when the shipping and billing address are different.)
        */
        this.set_ShippingZipCode = function(value) {
            this.setInput("ShippingZipCode", value);
        }

        /*
        Set the value of the StartDate input for this Choreo. ((optional, date) The date that the subscription and billing begin. Formatted like YYYY-MM-DD.)
        */
        this.set_StartDate = function(value) {
            this.setInput("StartDate", value);
        }

        /*
        Set the value of the SubscriptionId input for this Choreo. ((required, integer) The id of the subscription you want to update.)
        */
        this.set_SubscriptionId = function(value) {
            this.setInput("SubscriptionId", value);
        }

        /*
        Set the value of the SubscriptionName input for this Choreo. ((optional, string) The merchant assigned name for the subscription. 50 max characters.)
        */
        this.set_SubscriptionName = function(value) {
            this.setInput("SubscriptionName", value);
        }

        /*
        Set the value of the TotalOccurrences input for this Choreo. ((optional, integer) Number of billing occurrences or payments for the subscription.)
        */
        this.set_TotalOccurrences = function(value) {
            this.setInput("TotalOccurrences", value);
        }

        /*
        Set the value of the TransactionKey input for this Choreo. ((required, string) The TransactionKey provided by Authorize.net when signing up for a developer account.)
        */
        this.set_TransactionKey = function(value) {
            this.setInput("TransactionKey", value);
        }

        /*
        Set the value of the TrialAmount input for this Choreo. ((conditional, decimal) The amount to be charged for a payment during a trial period. Required when TrialOccurances is specified. Defaults to 0.00.)
        */
        this.set_TrialAmount = function(value) {
            this.setInput("TrialAmount", value);
        }

        /*
        Set the value of the TrialOccurrences input for this Choreo. ((optional, integer) Number of billing occurrences or payments in the trial period.)
        */
        this.set_TrialOccurrences = function(value) {
            this.setInput("TrialOccurrences", value);
        }

}

/*
A ResultSet with methods tailored to the values returned by the UpdateSubscription Choreo.
The ResultSet object is used to retrieve the results of a Choreo execution.
*/

var UpdateSubscriptionResultSet = function(resultStream) {
    UpdateSubscriptionResultSet.super_.call(this, resultStream);    
        /*
        Retrieve the value for the "Response" output from this Choreo execution. ((xml) The response from Authorize.net.)
        */
        this.get_Response = function() {
            return this.getResult("Response");
        }
}

util.inherits(UpdateSubscription, choreography.Choreography);
util.inherits(UpdateSubscriptionInputSet, choreography.InputSet);
util.inherits(UpdateSubscriptionResultSet, choreography.ResultSet);
exports.UpdateSubscription = UpdateSubscription;




/******************************************************************************
Begin output wrapper classes
******************************************************************************/

/**
 * Utility function, to retrieve the array-type sub-item specified by the key from the parent (array) specified by the item.
 * Returns an empty array if key is not present.
 */
function getSubArrayByKey(item, key) {
	var val = item[key];
	if(val == null) {
		val = new Array();
	}
	return val;
}


