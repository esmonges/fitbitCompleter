
var util = require("util");
var choreography = require("temboo/core/choreography");


/*
    GetRecentNews
    Retrieves recent news items.
*/


var GetRecentNews = function(session) {
    /*
        Create a new instance of the GetRecentNews Choreo. A TembooSession object, containing a valid
        set of Temboo credentials, must be supplied.
	*/
    var location = "/Library/NYTimes/TimesNewswire/GetRecentNews"
    GetRecentNews.super_.call(this, session, location);

    /*
    Define a callback that will be used to appropriately format the results of this Choreo.
    */
    var newResultSet = function(resultStream) {
        return new GetRecentNewsResultSet(resultStream);
    }

	/*
	Obtain a new InputSet object, used to specify the input values for an execution of this Choreo.
	*/
    this.newInputSet = function() {
        return new GetRecentNewsInputSet();
    }
    
	/*
	Execute this Choreo with the specified inputs, calling the specified callback upon success,
	and the specified errorCallback upon error.
	*/
    this.execute = function(inputs, callback, errorCallback) {
        this._execute(inputs, newResultSet, callback, errorCallback);
    }
}


/*
An InputSet with methods appropriate for specifying the inputs to the GetRecentNews
Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
*/

var GetRecentNewsInputSet = function() {
    GetRecentNewsInputSet.super_.call(this);
        /*
        Set the value of the APIKey input for this Choreo. ((required, string) The API Key provided by NY Times.)
        */
        this.set_APIKey = function(value) {
            this.setInput("APIKey", value);
        }

        /*
        Set the value of the Limit input for this Choreo. ((optional, integer) The number of results to return. Defaults to 20.)
        */
        this.set_Limit = function(value) {
            this.setInput("Limit", value);
        }

        /*
        Set the value of the Offset input for this Choreo. ((optional, integer) A numeric value indicating the starting point of the result set. This can be used in combination with the Limit input to page through results.)
        */
        this.set_Offset = function(value) {
            this.setInput("Offset", value);
        }

        /*
        Set the value of the ResponseFormat input for this Choreo. ((optional, string) The format that the response should be in. Can be set to json, xml, or sphp. Defaults to xml.)
        */
        this.set_ResponseFormat = function(value) {
            this.setInput("ResponseFormat", value);
        }

        /*
        Set the value of the Section input for this Choreo. ((optional, string) Limits the set of items by one or more sections. Separate sections by semicolons. Defaults to "all" to get all sections. See Choreo documentation for more options for this input.)
        */
        this.set_Section = function(value) {
            this.setInput("Section", value);
        }

        /*
        Set the value of the Source input for this Choreo. ((optional, string) Limits the set of items by originating source. Set to "nyt" for New York Times items only and "iht" for International Herald Tribune items. Set to "all" for both (the default).)
        */
        this.set_Source = function(value) {
            this.setInput("Source", value);
        }

        /*
        Set the value of the TimePeriod input for this Choreo. ((optional, integer) Limits the set of items by time published. Valid range is number of hours, 1â€“720 (in hours). Defaults to 24.)
        */
        this.set_TimePeriod = function(value) {
            this.setInput("TimePeriod", value);
        }

}

/*
A ResultSet with methods tailored to the values returned by the GetRecentNews Choreo.
The ResultSet object is used to retrieve the results of a Choreo execution.
*/

var GetRecentNewsResultSet = function(resultStream) {
    GetRecentNewsResultSet.super_.call(this, resultStream);    
        /*
        Retrieve the value for the "Response" output from this Choreo execution. (The response from the NY Times API. Format corresponds to the ResponseFormat input. Defaults to xml.)
        */
        this.get_Response = function() {
            return this.getResult("Response");
        }
}

util.inherits(GetRecentNews, choreography.Choreography);
util.inherits(GetRecentNewsInputSet, choreography.InputSet);
util.inherits(GetRecentNewsResultSet, choreography.ResultSet);
exports.GetRecentNews = GetRecentNews;


/*
    GetSpecificNewsItem
    Queries the Newswire API for a specific news item.
*/


var GetSpecificNewsItem = function(session) {
    /*
        Create a new instance of the GetSpecificNewsItem Choreo. A TembooSession object, containing a valid
        set of Temboo credentials, must be supplied.
	*/
    var location = "/Library/NYTimes/TimesNewswire/GetSpecificNewsItem"
    GetSpecificNewsItem.super_.call(this, session, location);

    /*
    Define a callback that will be used to appropriately format the results of this Choreo.
    */
    var newResultSet = function(resultStream) {
        return new GetSpecificNewsItemResultSet(resultStream);
    }

	/*
	Obtain a new InputSet object, used to specify the input values for an execution of this Choreo.
	*/
    this.newInputSet = function() {
        return new GetSpecificNewsItemInputSet();
    }
    
	/*
	Execute this Choreo with the specified inputs, calling the specified callback upon success,
	and the specified errorCallback upon error.
	*/
    this.execute = function(inputs, callback, errorCallback) {
        this._execute(inputs, newResultSet, callback, errorCallback);
    }
}


/*
An InputSet with methods appropriate for specifying the inputs to the GetSpecificNewsItem
Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
*/

var GetSpecificNewsItemInputSet = function() {
    GetSpecificNewsItemInputSet.super_.call(this);
        /*
        Set the value of the APIKey input for this Choreo. ((required, string) The API Key provided by NY Times.)
        */
        this.set_APIKey = function(value) {
            this.setInput("APIKey", value);
        }

        /*
        Set the value of the ResponseFormat input for this Choreo. ((optional, string) The format that the response should be in. Can be set to json, xml, or sphp. Defaults to xml.)
        */
        this.set_ResponseFormat = function(value) {
            this.setInput("ResponseFormat", value);
        }

        /*
        Set the value of the URL input for this Choreo. ((required, string) The complete URL of a specific news item. This URL is returned in the output of the GetRecentNews Choreo.)
        */
        this.set_URL = function(value) {
            this.setInput("URL", value);
        }

}

/*
A ResultSet with methods tailored to the values returned by the GetSpecificNewsItem Choreo.
The ResultSet object is used to retrieve the results of a Choreo execution.
*/

var GetSpecificNewsItemResultSet = function(resultStream) {
    GetSpecificNewsItemResultSet.super_.call(this, resultStream);    
        /*
        Retrieve the value for the "Response" output from this Choreo execution. (The response from the NY Times API. Format corresponds to the ResponseFormat input. Defaults to xml.)
        */
        this.get_Response = function() {
            return this.getResult("Response");
        }
}

util.inherits(GetSpecificNewsItem, choreography.Choreography);
util.inherits(GetSpecificNewsItemInputSet, choreography.InputSet);
util.inherits(GetSpecificNewsItemResultSet, choreography.ResultSet);
exports.GetSpecificNewsItem = GetSpecificNewsItem;




/******************************************************************************
Begin output wrapper classes
******************************************************************************/

/**
 * Utility function, to retrieve the array-type sub-item specified by the key from the parent (array) specified by the item.
 * Returns an empty array if key is not present.
 */
function getSubArrayByKey(item, key) {
	var val = item[key];
	if(val == null) {
		val = new Array();
	}
	return val;
}


